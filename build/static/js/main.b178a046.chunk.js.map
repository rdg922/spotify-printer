{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["SCOPES_URL_PARAM","join","App","useState","token","setToken","data","setData","useEffect","window","location","hash","substring","split","reduce","accumulator","currentValue","key","value","console","log","access_token","expires_in","token_type","localStorage","clear","setItem","getItem","handleLogin","getTop","axios","get","TOP_ENDPOINT","headers","Authorization","then","response","items","newData","url","album","images","indexOf","push","slice","catch","error","className","map","src","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAAe,I,6BCWTA,EADS,CAAC,mBAAoB,4BAA6B,2BAA4B,gBAAiB,yBAA0B,6BAA8B,0BAA2B,qBAAsB,8BAA+B,mBAAoB,sBAAuB,8BAA+B,wBAAyB,kBAAmB,oBAAqB,oBAAqB,+BACtXC,KAAK,OA0FtBC,MA1Ef,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,KAIbC,qBAAU,WACR,GAAIC,OAAOC,SAASC,KAAM,CAAC,IAAD,EAKWF,OAAOC,SAASC,KArBvBC,UAAU,GACHC,MAAM,KACXC,QAAO,SAACC,EAAaC,GAAkB,IAAD,EACjDA,EAAaH,MAAM,KAD8B,mBAC/DI,EAD+D,KAC1DC,EAD0D,KAItE,OAFAH,EAAYE,GAAOC,EACnBC,QAAQC,IAAIL,GACLA,IACN,IAWGM,EAFsB,EAEtBA,aACAC,EAHsB,EAGtBA,WACAC,EAJsB,EAItBA,WAIFC,aAAaC,QACbD,aAAaE,QAAQ,cAAeL,GACpCG,aAAaE,QAAQ,YAAaH,GAClCC,aAAaE,QAAQ,YAAaJ,GAGhCE,aAAaG,QAAQ,gBACvBtB,EAASmB,aAAaG,QAAQ,mBAIlC,IAAMC,EAAc,WAClBnB,OAAOC,SAAP,UA7C+B,yCA6C/B,sBA9Cc,mCA8Cd,yBA5C6B,4DA4C7B,kBAAyHV,EAAzH,0CAEI6B,EAAS,WAEbC,IAAMC,IAAIC,qFAA2D,CACnEC,QAAS,CACPC,cAAe,UAAY9B,KAE5B+B,MAAK,SAAAC,GAENjB,QAAQC,IAAIgB,EAAS9B,KAAK+B,OAE1B,IAJkB,EAIdC,EAAU,GAJI,cAKDF,EAAS9B,KAAK+B,OALb,IAKlB,IAAI,EAAJ,qBAAqC,CAAC,IAC9BE,EAD6B,QACjBC,MAAMC,OAAO,GAAGF,KACL,GAAzBD,EAAQI,QAAQH,IAClBD,EAAQK,KAAKJ,IARC,8BAWlBhC,EAAQ+B,EAAQM,MAAM,EAAG,QACxBC,OAAM,SAAAC,GAAK,OAAI3B,QAAQC,IAAI0B,OAsBhC,OACE,qBAAKC,UAAU,MAAf,SAnBKzC,EAOIA,EAAK0C,KAAI,SAACT,GAAD,OAIZ,aAHA,CAGA,qBACE,qBAAKU,IAAKV,SAVhB,qCACE,wBAAQW,QAASrB,EAAjB,qBACA,wBAAQqB,QAAStB,EAAjB,wBCpEOuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b178a046.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\n/* https://accounts.spotify.com/authorize?client_id=5fe01282e44241328a84e7c5cc169165&response_type=code&redirect_uri=https%3A%2F%2Fexample.com%2Fcallback&scope=user-read-private%20user-read-email&state=34fFs29kd09 */\nconst CLIENT_ID = \"098520251b854f2ab32422501b833835\"\nconst SPOTIFY_AUTHORIZE_ENDPOINT = \"https://accounts.spotify.com/authorize\"\nconst REDIRECT_URL_AFTER_LOGIN = \"https://rdg922.github.io/spotify-printer/build/index.html\"\n\nconst SCOPES = [\"ugc-image-upload\", \"user-read-recently-played\", \"user-read-playback-state\", \"user-top-read\", \"playlist-modify-public\", \"user-modify-playback-state\", \"playlist-modify-private\", \"user-follow-modify\", \"user-read-currently-playing\", \"user-follow-read\", \"user-library-modify\", \"user-read-playback-position\", \"playlist-read-private\", \"user-read-email\", \"user-read-private\", \"user-library-read\", \"playlist-read-collaborative\"]\nconst SCOPES_URL_PARAM = SCOPES.join(\"%20\");\n\nconst TOP_ENDPOINT = \"\thttps://api.spotify.com/v1/me/top/tracks\"\n\nconst getReturnParamsFromSpotifyAuth = (hash) => {\n  const stringAfterHashtag = hash.substring(1);\n  const paramsInUrl = stringAfterHashtag.split(\"&\");\n  const paramsSplitUp = paramsInUrl.reduce((accumulator, currentValue) => {\n    const [key, value] = currentValue.split(\"=\")\n    accumulator[key] = value;\n    console.log(accumulator)\n    return accumulator;\n  }, {})\n  return paramsSplitUp\n}\n\nfunction App() {\n  const [token, setToken] = useState('');\n  const [data, setData] = useState('');\n\n  useEffect(() => {\n    if (window.location.hash) {\n      const {\n        access_token,\n        expires_in,\n        token_type\n      } = getReturnParamsFromSpotifyAuth(window.location.hash);\n\n\n      localStorage.clear();\n      localStorage.setItem(\"accessToken\", access_token);\n      localStorage.setItem(\"tokenType\", token_type);\n      localStorage.setItem(\"expiresIn\", expires_in);\n    }\n\n    if (localStorage.getItem('accessToken')) {\n      setToken(localStorage.getItem(\"accessToken\"));\n    }\n\n  })\n  const handleLogin = () => {\n    window.location = `${SPOTIFY_AUTHORIZE_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URL_AFTER_LOGIN}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true`\n  }\n  const getTop = () => {\n\n    axios.get(TOP_ENDPOINT + \"?time_range=short_term&limit=20&offset=1\", {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(response => {\n      // setData(response.data)\n      console.log(response.data.items)\n\n      let newData = []\n      for(let track of response.data.items){\n        const url = track.album.images[1].url\n        if (newData.indexOf(url) == -1) {\n          newData.push(url)\n        }\n      }\n      setData(newData.slice(0, 10))\n    }).catch(error => console.log(error));\n    \n  }\n  const renderPage = () => {\n    if (!data) {\n      return (\n      <>\n        <button onClick={getTop}>Get Top</button>\n        <button onClick={handleLogin}>Auth</button>\n      </>)\n    } else {\n      return data.map((url) => (\n          // <img src={track.album.images[0].url}></img>\n          // {console.log(track.album.images[0].url)}\n          // console.log(track.album.images[0].url)\n          <>\n            <img src={url}>\n            </img>\n          </>\n      ))\n    }\n  }\n  return (\n    <div className=\"App\">\n      {renderPage()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}